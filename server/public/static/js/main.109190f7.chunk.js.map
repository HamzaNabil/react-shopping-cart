{"version":3,"sources":["words.js","components/Footer/Footer.js","components/Header/Header.js","store/actions/types.js","store/reducers/reducer.js","store/reducers/productsReducer.js","store/reducers/cartReducer.js","store/reducers/orderReducer.js","store/store.js","components/Input/Input.js","components/CheckoutForm/Checkout.js","components/Cart/OrderModal.js","components/Cart/Cart.js","store/actions/cart.js","store/actions/orders.js","components/Filter/Filter.js","store/actions/products.js","components/Products/ProductModal.js","components/Products/Products.js","pages/Home.js","pages/Orders.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["words","Footer","Header","FETCH_PRODUCTS","FILTER_SIZE","FILTER_SORT","ADD_CART","REMOVE_CART","CLEAR_CART","CREATE_ORDER","CLEAR_ORDER","FETCH_ORDERS","combineReducers","products","state","action","type","data","filterProducts","size","sort","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","reduxThunk","Input","props","label","required","name","onChange","Checkout","showForm","className","onClick","setShowForm","left","onSubmit","submitOrder","handleChange","OrderModal","closeModal","isOpen","onRequestClose","email","reduce","a","p","price","map","qty","title","connect","removeCart","product","dispatch","getState","updatedCartItems","filter","_id","setItem","stringify","createOrder","fetch","method","headers","body","then","res","json","clear","clearOrder","useState","value","setValue","length","bottom","cascade","item","src","imageUrl","alt","id","acc","e","preventDefault","prevState","target","filteredSize","newProducts","sizes","indexOf","filteredSort","b","ProductModal","desc","fetchProducts","addToCart","cartItemsClone","isProductExist","forEach","push","setProduct","useEffect","href","openModal","Home","fetchOrders","Navbar","to","App","path","element","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.109190f7.chunk.js","sourcesContent":["export const words =  {\r\n    headerTitle: 'Shopping Cart',\r\n    footerTitle: 'Â© CopyRight HamzaNabil @2021',\r\n    cartHeader: 'There is products in cart:',\r\n    cartTitle: 'Title',\r\n    cartQty: 'qty',\r\n    cartPrice: 'price',\r\n    removeBtn: 'Remove',\r\n    selectProducts: 'select products',\r\n    total: 'Total',\r\n    checkout: 'Checkout',\r\n    name: 'Name',\r\n    email: 'Email',\r\n}","import React from 'react';\r\nimport \"../../css/Footer/Footer.css\"\r\nimport { words } from '../../words';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            {words.footerTitle}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport \"../../css/Header/Header.css\";\r\nimport { words } from \"../../words\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            {words.headerTitle}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","\r\n// Products\r\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\n\r\n// Filter\r\nexport const FILTER_SIZE = \"FILTER_SIZE\";\r\nexport const FILTER_SORT = \"FILTER_SORT\";\r\n\r\n// Cart\r\nexport const ADD_CART = \"ADD_CART\";\r\nexport const REMOVE_CART = \"REMOVE_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\n// Orders\r\nexport const CREATE_ORDER = \"CREATE_ORDER\";\r\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";","\r\nimport { combineReducers } from 'redux'\r\nimport { cartReducer } from './cartReducer'\r\nimport { orderReducer } from './orderReducer'\r\nimport { productsReducer } from './productsReducer'\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer\r\n})","import { FETCH_PRODUCTS, FILTER_SIZE, FILTER_SORT } from \"../actions/types\";\r\n\r\nexport const productsReducer = (state= {}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_PRODUCTS:\r\n            return {products: action.data, filterProducts: action.data} \r\n        \r\n        case FILTER_SIZE: \r\n            return {\r\n                ...state,\r\n                size: action.data.size,\r\n                filterProducts: action.data.products\r\n            }   \r\n            \r\n        case FILTER_SORT: \r\n        return {\r\n            ...state,\r\n            sort: action.data.sort,\r\n            filterProducts: action.data.products\r\n        }   \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { ADD_CART, CLEAR_CART, REMOVE_CART } from \"../actions/types\";\r\n\r\n\r\nexport const cartReducer = (state = {\r\n    cartItems: JSON.parse(localStorage.getItem('cartItems')) || []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ADD_CART:\r\n            return {cartItems: action.data.cartItems}\r\n\r\n        case REMOVE_CART: \r\n            return {cartItems: action.data.cartItems}    \r\n\r\n        case CLEAR_CART:\r\n            return {...state, products: [] }\r\n        default: \r\n            return state\r\n        \r\n    }\r\n}","import { CLEAR_ORDER, CREATE_ORDER, FETCH_ORDERS } from \"../actions/types\";\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_ORDERS: \r\n            return {\r\n                ...state,\r\n                orders: action.data.orders\r\n            }\r\n        case CREATE_ORDER: \r\n            return {order: action.data.order};\r\n\r\n        case CLEAR_ORDER:\r\n            return {order: false}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from './reducers/reducer';\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst initState= {}\r\n\r\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducer, initState, enhancer(applyMiddleware(reduxThunk)));\r\n\r\nexport default store;\r\n\r\n// create static type\r\n// create action creator => dispatch(action)\r\n// create reducer \r\n// View ","import React from 'react'\r\n\r\nexport default function Input(props) {\r\n    return (\r\n        <div>\r\n            <label> {props.label} </label>\r\n            <input \r\n                type={props.type} \r\n                required \r\n                name={props.name} \r\n                onChange={props.onChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../../css/CheckoutForm/Checkout.css\"\r\nimport Input from '../Input/Input'\r\nimport Zoom from 'react-reveal/Zoom'\r\nimport { words } from '../../words'\r\nfunction Checkout(props) {\r\n    return (\r\n        <>\r\n            {props.showForm &&  <div className=\"checkout-form\">\r\n                <span className=\"close-icon\" onClick={() => props.setShowForm(false)}> &times; </span> \r\n                <Zoom left>\r\n                    <form onSubmit={props.submitOrder}>\r\n                        <Input\r\n                            label={words.name}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={props.handleChange}\r\n                            name=\"email\"\r\n                        />\r\n                                            \r\n                        <div>\r\n                            <button type=\"submit\"> {words.checkout} </button>\r\n                        </div>\r\n                    </form>\r\n                </Zoom>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nfunction OrderModal(props) {\r\n    const {order, closeModal, cartItems} = props \r\n    return (\r\n        <>\r\n        {order &&\r\n            <Modal isOpen={order} onRequestClose={closeModal}>\r\n                <div className=\"order-info\">\r\n                    <span className=\"close-icon\" onClick={closeModal}> &times; </span>\r\n                    <p className=\"alert-success\"> order done success </p>\r\n                    <table>\r\n                        <tr>\r\n                            <td>Name:</td>\r\n                            <td>{order.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email:</td>\r\n                            <td>{order.email}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total:</td>\r\n                            <td>{cartItems.reduce( (a, p) => {\r\n                                return a + p.price\r\n                            }, 0)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                Selected Items:\r\n                            </td>\r\n                            <td>{cartItems.map(p => (\r\n                                <div className=\"cart-data\">\r\n                                    <p>Number of this products: {p.qty}</p>\r\n                                    <p>Title of  products: {p.title}</p>\r\n                                </div>\r\n                            ))}</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </Modal> \r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default OrderModal","import React, { useState } from 'react'\r\nimport \"../../css/Cart/Cart.css\"\r\nimport Checkout from '../CheckoutForm/Checkout';\r\nimport Bounce from 'react-reveal/Bounce'\r\nimport Modal from 'react-modal'\r\nimport { connect } from 'react-redux';\r\nimport { removeCart } from '../../store/actions/cart';\r\nimport OrderModal from './OrderModal';\r\nimport {createOrder, clearOrder} from '../../store/actions/orders'\r\n\r\nfunction Cart(props) {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const submitOrder = (e) => {\r\n        e.preventDefault();\r\n        const order = {\r\n            name : value.name,\r\n            email: value.email\r\n        }\r\n        props.createOrder(order);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        props.clearOrder();\r\n        setShowForm(false)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValue( (prevState) => ({ ...prevState, [e.target.name]: e.target.value}) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-wrapper\">\r\n            <div className=\"cart-title\"> {props.cartItems.length === 0 ? 'Cart Empty' : <p>\r\n                There is {props.cartItems.length} products in cart\r\n                </p>} </div>\r\n            {/* Modal */}\r\n            <OrderModal cartItems={props.cartItems} order={props.order} closeModal={closeModal} />\r\n            <Bounce bottom cascade>\r\n                <div className=\"cart-items\">\r\n                    {props.cartItems.map(item => (\r\n                        <div className=\"cart-item\" key={item.id}>\r\n                            <img src={item.imageUrl} alt=\"\"/>\r\n                            <div className=\"cart-info\">\r\n                                <div>\r\n                                    <p> title {item.title} </p>\r\n                                    <p> qty: {item.qty}  </p>\r\n                                    <p> price: ${item.price} </p>\r\n                                </div>\r\n                                <button onClick={() => props.removeCart(item)}>\r\n                                    Remove\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Bounce>\r\n            {\r\n                props.cartItems.length !== 0 && \r\n                (\r\n                    <div className=\"cart-footer\">\r\n                        <div className=\"total\">Total : ${props.cartItems.reduce( (acc, p) => {\r\n                            return acc + p.price\r\n                        }  , 0)} </div>\r\n                        <button onClick={() => setShowForm(true)}> select products </button>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {/* Checkout Form  */}\r\n            <Checkout \r\n                showForm={showForm}\r\n                submitOrder={submitOrder} \r\n                setShowForm={setShowForm} \r\n                handleChange={handleChange}\r\n            />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default connect((state) =>{\r\n    return {\r\n        order: state.order.order,\r\n        cartItems: state.cart.cartItems\r\n    }\r\n}, {removeCart, createOrder, clearOrder} )(Cart)","import { ADD_CART, REMOVE_CART } from \"./types\";\r\n\r\n\r\nexport const addToCart = (product) => {\r\n    return (dispatch, getState) => {\r\n        const cartItems = getState().cart.cartItems\r\n        const cartItemsClone = [...cartItems];\r\n        var isProductExist = false;\r\n        cartItemsClone.forEach(p => {\r\n            if(p._id == product._id) {\r\n                p.qty++;\r\n                isProductExist= true;\r\n            }\r\n        })\r\n        if(!isProductExist) {\r\n            cartItemsClone.push({...product, qty: 1})\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_CART,\r\n            data: {\r\n                cartItems: cartItemsClone\r\n            }\r\n        });\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItemsClone))\r\n    }\r\n}\r\n\r\nexport const removeCart = (product) => {\r\n    return (dispatch, getState) => {\r\n        const cartItems = getState().cart.cartItems\r\n        const cartItemsClone = [...cartItems];\r\n        const updatedCartItems = cartItemsClone.filter(p => p._id !== product._id)\r\n        dispatch({\r\n            type: REMOVE_CART,\r\n            data: {\r\n                cartItems: updatedCartItems\r\n            }\r\n        })\r\n        localStorage.setItem('cartItems', JSON.stringify(updatedCartItems))\r\n    }\r\n}","import { CLEAR_CART, CLEAR_ORDER, CREATE_ORDER, FETCH_ORDERS } from \"./types\"\r\n\r\nexport const createOrder = (order) => {\r\n    return (dispatch) => {\r\n        fetch('/api/orders', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(order)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch({\r\n                    type: CREATE_ORDER,\r\n                    data: {\r\n                        order: data\r\n                    }\r\n                })\r\n            })\r\n            localStorage.clear('cartItems');\r\n            dispatch({type: CLEAR_CART})\r\n    }\r\n}\r\n\r\nexport const clearOrder = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_ORDER\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return (dispatch) => {\r\n        fetch(\"/api/orders\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type: FETCH_ORDERS,\r\n                data: {\r\n                    orders: data\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport \"../../css/Filter/Filter.css\"\r\nimport Flip from 'react-reveal/Flip';\r\nimport {connect} from 'react-redux';\r\nimport { filteredSize, filteredSort } from '../../store/actions/products'\r\n\r\nfunction Filter(props) {\r\n    return (\r\n        <Flip left>\r\n            {props.filterProducts && <div className=\"filter-wrapper\"> \r\n                <h2 className=\"filter-title\"> Filter </h2>\r\n                <div className=\"num-of-products\"> Number of Products {props.filterProducts.length} </div>\r\n                <div className=\"filter-by-size\">\r\n                    <span>Filter</span>\r\n                    <select value={props.size} className=\"filter-select\" onChange={(e) => props.filteredSize(props.products, e.target.value)}>\r\n                        <option value=\"ALL\">ALL</option>\r\n                        <option value=\"XS\">XS</option>\r\n                        <option value=\"S\">S</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"XL\">XL</option>\r\n                        <option value=\"XXL\">XXL</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"filter-by-size\">\r\n                    <span>Order</span>\r\n                    <select className=\"filter-select\" value={props.sort} onChange={(e) => props.filteredSort(props.filterProducts, e.target.value)}>\r\n                        <option value=\"latest\">Latest</option>\r\n                        <option value=\"lowest\">lowest</option>\r\n                        <option value=\"highest\">Highest</option>\r\n                    </select>\r\n                </div>\r\n            </div>}\r\n        </Flip>\r\n    )\r\n}\r\n\r\nexport default connect( (state) => {\r\n    return {\r\n        sort: state.products.sort,\r\n        size: state.products.size,\r\n        products: state.products.products,\r\n        filterProducts: state.products.filterProducts\r\n    }\r\n}, {\r\n    filteredSize,\r\n    filteredSort\r\n} )(Filter);","import { FETCH_PRODUCTS, FILTER_SIZE, FILTER_SORT } from \"./types\"\r\n\r\nexport const fetchProducts = () => {\r\n    return (dispatch) => {\r\n        fetch('/api/products').then(res=> res.json()).then(data => {\r\n            dispatch({\r\n                type: FETCH_PRODUCTS,\r\n                data: data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const filteredSize = (products, value) => {\r\n    return (dispatch) => {\r\n        let productsClone = [...products]\r\n        let newProducts = productsClone.filter(p => p.sizes.indexOf(value) != -1);\r\n\r\n        dispatch({\r\n            type: FILTER_SIZE,\r\n            data : {\r\n                size: value,\r\n                products: value == \"ALL\" ? products : newProducts\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const filteredSort = (products, value) => {\r\n    return (dispatch) => {\r\n        let productsClone = [...products]\r\n        let newProducts = productsClone.sort( function(a,b) {\r\n            if(value == \"lowest\") {\r\n              return a.price - b.price\r\n            } else if(value == \"highest\") {\r\n              return b.price - a.price\r\n            } else {\r\n              return a.id < b.id ? 1 : -1\r\n            }\r\n        });\r\n        dispatch({\r\n            type: FILTER_SORT,\r\n            data: {\r\n                sort: value,\r\n                products: newProducts\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nfunction ProductModal(props) {\r\n    const {product, closeModal} = props;\r\n    return (\r\n        <Modal isOpen={product} onRequestClose={closeModal}>\r\n            <span className=\"close-icon\" onClick={closeModal}> &times; </span>\r\n            <div className=\"product-info\">\r\n                <img src={product.imageUrl} alt={product.title} />\r\n                <p> {product.title} </p>\r\n                <p> {product.desc }</p>\r\n                <p> ${product.price }</p>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default  ProductModal;","import React, { useEffect, useState } from 'react'\r\nimport \"../../css/Products/Products.css\"\r\nimport ProductModal from './ProductModal';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport { connect } from 'react-redux'\r\nimport { fetchProducts } from '../../store/actions/products';\r\nimport { addToCart } from '../../store/actions/cart'\r\n\r\nfunction Products(props) {\r\n    const [product, setProduct] = useState(\"\");\r\n\r\n    const openModal = (product) => {\r\n        setProduct(product)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setProduct(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        props.fetchProducts()\r\n    }, [])\r\n\r\n    return (\r\n        <Bounce left cascade>\r\n            <div className=\"products-wrapper\"> \r\n                {props.products && props.products.length ? props.products.map(product => (\r\n                    <div className=\"product-item\" key={product.id}> \r\n                        <a href=\"#\" onClick={() => openModal(product)}>\r\n                            <img src={product.imageUrl} alt={product.title} />\r\n                        </a>\r\n                        <div className=\"product-desc\">\r\n                            <p>{product.title}</p>\r\n                            <span>${product.price}</span>\r\n                        </div>\r\n                        <button onClick={() => props.addToCart(product)}> Add To Cart </button>\r\n                    </div> \r\n                )): \"loading..\"} \r\n\r\n                <ProductModal product={product} closeModal={closeModal} />\r\n            </div>\r\n        </Bounce> \r\n    )\r\n}\r\n\r\nexport default connect( (state) => {\r\n    return {\r\n        products: state.products.filterProducts\r\n    }\r\n}, { fetchProducts, addToCart } )(Products)\r\n","import React from 'react'\r\nimport Cart from '../components/Cart/Cart'\r\nimport Filter from '../components/Filter/Filter'\r\nimport Products from '../components/Products/Products'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <Products /> \r\n                <Filter />\r\n            </div>        \r\n            <Cart />  \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { fetchOrders } from '../store/actions/orders';\r\nimport { connect } from 'react-redux';\r\nimport \"../css/Orders.css\"\r\n\r\nfunction Orders(props) {\r\n\r\n    useEffect( () => {\r\n        props.fetchOrders()\r\n    }, [])\r\n\r\n    const {orders} = props;\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th> id </th>\r\n                        <th> name </th>\r\n                        <th> email </th>\r\n                        <th> items </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders && orders.map(order => (\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.name}</td>\r\n                            <td>{order.email}</td>\r\n                            <td>{props.cartItems.map(p => (\r\n                                <p> {p.title} , qty: {p.qty}</p>\r\n                            ))}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect((state) =>{\r\n    return {\r\n        orders: state.order.orders,\r\n        cartItems: state.cart.cartItems\r\n    }\r\n} , { fetchOrders })(Orders)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport \"../../css/Navbar/Navbar.css\"\r\nexport default function Navbar() {\r\n    return (\r\n        <div className='nav'>\r\n        <ul>\r\n          <li> <NavLink to=\"/\" >Home</NavLink> </li>  \r\n          <li> <NavLink to=\"/orders\" >Orders</NavLink> </li>  \r\n        </ul>  \r\n      </div> \r\n    )\r\n}\r\n","import React  from 'react';\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store';\r\nimport {BrowserRouter, NavLink, Routes, Route} from 'react-router-dom'\r\nimport Home from './pages/Home';\r\nimport Orders from './pages/Orders';\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <div className=\"layout\">\r\n          <Header />\r\n          <main>\r\n           <Navbar />\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} exact />\r\n              <Route path=\"/orders\" element={<Orders />} exact />\r\n            </Routes>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}